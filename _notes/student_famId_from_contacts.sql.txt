WITH SiblingGroups AS
  (SELECT
      StudentsInFamily,
      StudentsInFamilyCount,
      FamilyIdsInFamily, 
      FamilyIdsInFamilyCount,
      FamilyIdsInFamilyDistinctCount,
      MinDOB, 
      MaxStuNum,
      ROWNUM AS RowIndex

    FROM (SELECT DISTINCT *

      FROM (SELECT
          LISTAGG(StudentSibling, ',') WITHIN GROUP (ORDER BY StudentSibling) AS StudentsInFamily,
          COUNT(StudentSibling) AS StudentsInFamilyCount,

          LISTAGG(StudentSibling_FamId, ',') WITHIN GROUP (ORDER BY StudentSibling_FamId) AS FamilyIdsInFamily,
          COUNT(StudentSibling_FamId) AS FamilyIdsInFamilyCount,
          COUNT(DISTINCT StudentSibling_FamId) AS FamilyIdsInFamilyDistinctCount,
          
          MIN(SiblingDOB) AS MinDOB,
          MAX(StudentSibling) AS MaxStuNum

        FROM (SELECT DISTINCT
            StudentSelf,
            StudentSibling,
            ss.DOB AS SiblingDOB,
            ss.Family_Ident AS StudentSibling_FamId

          FROM (SELECT DISTINCT
              s1.Student_Number AS StudentSelf,
              s1.Student_Number AS Sibling1_SN,
              s2.Student_Number AS Sibling2_SN,
              s3.Student_Number AS Sibling3_SN

            FROM Students s1

            JOIN StudentContactAssoc scaS1P1
              ON s1.Dcid = scaS1P1.StudentDcid

            JOIN OriginalContactMap ocmS1P1
              ON scaS1P1.StudentContactAssocid = ocmS1P1.StudentContactAssocId
                AND LOWER(ocmS1P1.OriginalContactType) IN ('mother', 'father', 'guardian')

            JOIN Person p1
              ON scaS1P1.PersonId = p1.Id

            JOIN StudentContactAssoc scaP1S2
              ON p1.Id = scaP1S2.PersonId

            JOIN OriginalContactMap ocmP1S2
              ON scaP1S2.StudentContactAssocid = ocmP1S2.StudentContactAssocId
              AND LOWER(ocmP1S2.OriginalContactType) IN ('mother', 'father', 'guardian')

            JOIN Students s2
              ON scaP1S2.StudentDcid = s2.Dcid

            JOIN StudentContactAssoc scaS2P2
              ON s2.Dcid = scaS2P2.StudentDcid

            JOIN OriginalContactMap ocmS2P2
              ON scaS2P2.StudentContactAssocid = ocmS2P2.StudentContactAssocId
                AND LOWER(ocmS2P2.OriginalContactType) IN ('mother', 'father', 'guardian')

            JOIN Person p2
              ON scaS2P2.PersonId = p2.Id

            JOIN StudentContactAssoc scaP2S3
              ON p2.Id = scaP2S3.PersonId

            JOIN OriginalContactMap ocmP2S3
              ON scaP2S3.StudentContactAssocid = ocmP2S3.StudentContactAssocId
                AND LOWER(ocmP2S3.OriginalContactType) IN ('mother', 'father', 'guardian')

            JOIN Students s3
              ON scaP2S3.StudentDcid = s3.Dcid )

          UNPIVOT ( StudentSibling FOR (SOURCE_S) IN
            ( Sibling1_SN AS 'S1',
              Sibling2_SN AS 'S2',
              Sibling3_SN AS 'S3'
            )
          )

          JOIN Students ss
            ON StudentSibling = ss.Student_Number

          GROUP BY StudentSelf, StudentSibling, ss.Grade_Level, 
                   ss.Enroll_Status, ss.DOB, ss.Family_Ident, ss.Street

          ORDER BY StudentSelf, StudentSibling )

        GROUP BY StudentSelf
        ORDER BY StudentSelf )

      ORDER BY FamilyIdsInFamily NULLS FIRST,
               StudentsInFamily )
  ), Siblings AS
  (SELECT
      RowIndex AS TempFamGrpNumber,
      StudentsInFamily,
      StudentsInFamilyCount AS TempFamGrpMemberCount,
      FamilyIdsInFamily,
      FamilyIdsInFamilyCount,
      FamilyIdsInFamilyDistinctCount,
      MinDOB,
      MaxStuNum,
      REGEXP_SUBSTR(StudentsInFamily, chr(91)||'^,'||chr(93)||'+', 1, column_value) AS Stu_Num
      FROM SiblingGroups,
            TABLE (CAST (MULTISET (SELECT level FROM Dual
                                   CONNECT BY level <= REGEXP_COUNT (StudentsInFamily, ',') + 1
                                  ) AS sys.odcinumberlist ) )
  )

SELECT
  sibs1.Stu_Num,
  s.Grade_Level,
  s.Enroll_Status,
  s.DOB,
  scf.Family_Rep,
  s.Family_Ident,
  sibs1.StudentsInFamily,
  sibs1.TempFamGrpMemberCount,
  sibs2.FamilyMemberCnt,
  sibs1.FamilyIdsInFamily,
  sibs1.FamilyIdsInFamilyCount, 
  sibs1.FamilyIdsInFamilyDistinctCount,
  sibs1.MinDOB,
  sibs1.TempFamGrpNumber,
  CASE
    WHEN sibs2.FamilyMemberCnt = 1 THEN 'Only Child'
    WHEN sibs2.FamMemEnrolledCnt = 1 AND s.Enroll_Status = 0 THEN 'Only Enrolled'
    WHEN (sibs2.FamMemPreregisteredCnt = 1 AND sibs2.FamMemEnrolledCnt = 0 AND s.Enroll_Status = -1) THEN 'Only Prereg none enrolled'
    ELSE 'No Determ'
  END AS FamRepCalc
  
FROM Siblings sibs1

JOIN
  ( SELECT 
      TempFamGrpNumber,
      COUNT(TempFamGrpNumber) AS FamilyMemberCnt,
      COUNT(CASE WHEN Enroll_Status = -1 THEN 1 ELSE NULL END) AS FamMemPreregisteredCnt,
      COUNT(CASE WHEN Enroll_Status = 0 THEN 1 ELSE NULL END) AS FamMemEnrolledCnt,
      COUNT(CASE WHEN Enroll_Status > 0 THEN 1 ELSE NULL END) AS FamMemInactiveCnt,
      MIN(DOB) AS YoungestSibling
    FROM Siblings
    JOIN Students
      ON Stu_Num = Student_Number
    GROUP BY TempFamGrpNumber
  ) sibs2
  ON sibs1.TempFamGrpNumber = sibs2.TempFamGrpNumber

JOIN Students s 
  ON sibs1.Stu_Num = s.Student_Number

 JOIN StudentCoreFields scf
   ON s.Dcid = scf.StudentsDcid

ORDER BY s.Family_Ident NULLS FIRST, 
         sibs1.StudentsInFamily,
         sibs1.Stu_Num DESC

